When a JSON extension is installed such as quarkus-resteasy-reactive-jackson or quarkus-resteasy-reactive-jsonb, 
Quarkus will use the application/json media type by default for most return values, 
unless the media type is explicitly set via @Produces or @Consumes annotations 
(there are some exceptions for well known types, such as String and File, 
which default to text/plain and application/octet-stream respectively).

    @Path("{id}")
    @Produces(MediaType.APPLICATION_JSON)
    @GET
    public Timer findTimer(String id)

******************************************tanstack*********************
import ky from 'ky'
import { useQuery } from '@tanstack/react-query'

const fetchPosts = async (limit = 10) => {
  const parsed = await ky('https://jsonplaceholder.typicode.com/posts').json()
  return parsed.filter((x) => x.id <= limit)
}

const usePosts = (limit) => {
  return useQuery({
    queryKey: ['posts', limit],
    queryFn: () => fetchPosts(limit),
  })
}

export { usePosts, fetchPosts }
https://github.com/TanStack/query/blob/main/examples/react/nextjs/src/hooks/usePosts/index.js
********************************************************************************

axios.post('/user', {
    firstName: 'Fred',
    lastName: 'Flintstone'
  })
  .then(function (response) {
    console.log(response);
  })
  .catch(function (error) {
    console.log(error);
  });